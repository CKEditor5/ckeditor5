{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./packages/ckeditor5-cloud-services/tests/_utils/cloud-services-config.js","webpack:///./node_modules/umberto/source/ckeditor5/12.4.0/_snippets/framework/extending-content-custom-figure-attributes.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","CS_CONFIG","tokenUrl","uploadUrl","_ckeditor_ckeditor5_cloud_services_tests_utils_cloud_services_config__WEBPACK_IMPORTED_MODULE_0__","setupCustomClassConversion","viewElementName","modelElementName","editor","model","schema","extend","allowAttributes","conversion","for","add","upcastCustomClasses","priority","dispatcher","on","evt","data","conversionApi","modelElement","item","viewFigure","mapper","toViewElement","writer","addClass","getAttribute","downcastCustomClasses","setupCustomAttributeConversion","viewAttribute","modelAttribute","viewItem","modelRange","start","nodeAfter","setAttribute","upcastAttribute","viewElement","Array","from","createRangeIn","getItems","find","is","findViewChild","downcastAttribute","elementName","currentAttributeValue","push","getClassNames","ClassicEditor","document","querySelector","cloudServices","extraPlugins","toolbar","viewportTopOffset","window","getViewportTopOffsetConfig","then","catch","err","console","error","stack"],"mappings":"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","file":"framework/extending-content-custom-figure-attributes/snippet.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 397);\n","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n// WARNING: The URLs below should not be used for any other purpose than Easy Image plugin development.\n// Images uploaded using the testing token service may be deleted automatically at any moment.\n// If you would like to try the Easy Image service, please sign up for a free trial (https://ckeditor.com/ckeditor-cloud-services/).\n// Images uploaded during the free trial will not be deleted for the whole trial period and additionally the trial service can be converted\n// into a subscription at any moment, allowing you to preserve all uploaded images.\n\nexport const TOKEN_URL = 'https://33333.cke-cs.com/token/dev/ijrDsqFix838Gh3wGO3F77FSW94BwcLXprJ4APSp3XQ26xsUHTi0jcb1hoBt';\n\nexport const UPLOAD_URL = 'https://33333.cke-cs.com/easyimage/upload/';\n\nexport const CS_CONFIG = {\n\ttokenUrl: TOKEN_URL,\n\tuploadUrl: UPLOAD_URL\n};\n","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/* globals ClassicEditor, console, window, document */\n\nimport { CS_CONFIG } from '@ckeditor/ckeditor5-cloud-services/tests/_utils/cloud-services-config';\n\n/**\n * Plugin that converts custom attributes for elements that are wrapped in <figure> in the view.\n */\nfunction CustomFigureAttributes( editor ) {\n\t// Define on which elements the CSS classes should be preserved:\n\tsetupCustomClassConversion( 'img', 'image', editor );\n\tsetupCustomClassConversion( 'table', 'table', editor );\n\n\teditor.conversion.for( 'upcast' ).add( upcastCustomClasses( 'figure' ), { priority: 'low' } );\n\n\t// Define custom attributes that should be preserved.\n\tsetupCustomAttributeConversion( 'img', 'image', 'id', editor );\n\tsetupCustomAttributeConversion( 'table', 'table', 'id', editor );\n}\n\n/**\n * Sets up a conversion that preservers classes on <img> and <table> elements.\n */\nfunction setupCustomClassConversion( viewElementName, modelElementName, editor ) {\n\t// The 'customClass' attribute will store custom classes from the data in the model so schema definitions allow this attribute.\n\teditor.model.schema.extend( modelElementName, { allowAttributes: [ 'customClass' ] } );\n\n\t// Define upcast converters for the <img> and <table> elements with a \"low\" priority so they are run after the default converters.\n\teditor.conversion.for( 'upcast' ).add( upcastCustomClasses( viewElementName ), { priority: 'low' } );\n\n\t// Define downcast converters for a model element with a \"low\" priority so they are run after the default converters.\n\teditor.conversion.for( 'downcast' ).add( downcastCustomClasses( modelElementName ), { priority: 'low' } );\n}\n\n/**\n * Sets up a conversion for a custom attribute on view elements contained inside a <figure>.\n *\n * This method:\n * - Adds proper schema rules.\n * - Adds an upcast converter.\n * - Adds a downcast converter.\n */\nfunction setupCustomAttributeConversion( viewElementName, modelElementName, viewAttribute, editor ) {\n\t// Extend the schema to store an attribute in the model.\n\tconst modelAttribute = `custom${ viewAttribute }`;\n\n\teditor.model.schema.extend( modelElementName, { allowAttributes: [ modelAttribute ] } );\n\n\teditor.conversion.for( 'upcast' ).add( upcastAttribute( viewElementName, viewAttribute, modelAttribute ) );\n\teditor.conversion.for( 'downcast' ).add( downcastAttribute( modelElementName, viewElementName, viewAttribute, modelAttribute ) );\n}\n\n/**\n * Creates an upcast converter that will pass all classes from the view element to the model element.\n */\nfunction upcastCustomClasses( elementName ) {\n\treturn dispatcher => dispatcher.on( `element:${ elementName }`, ( evt, data, conversionApi ) => {\n\t\tconst viewItem = data.viewItem;\n\t\tconst modelRange = data.modelRange;\n\n\t\tconst modelElement = modelRange && modelRange.start.nodeAfter;\n\n\t\tif ( !modelElement ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// The upcast conversion picks up classes from the base element and from the <figure> element so it should be extensible.\n\t\tconst currentAttributeValue = modelElement.getAttribute( 'customClass' ) || [];\n\n\t\tcurrentAttributeValue.push( ...viewItem.getClassNames() );\n\n\t\tconversionApi.writer.setAttribute( 'customClass', currentAttributeValue, modelElement );\n\t} );\n}\n\n/**\n * Creates a downcast converter that adds classes defined in the `customClass` attribute to a given view element.\n *\n * This converter expects that the view element is nested in a <figure> element.\n */\nfunction downcastCustomClasses( modelElementName ) {\n\treturn dispatcher => dispatcher.on( `insert:${ modelElementName }`, ( evt, data, conversionApi ) => {\n\t\tconst modelElement = data.item;\n\n\t\tconst viewFigure = conversionApi.mapper.toViewElement( modelElement );\n\n\t\tif ( !viewFigure ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// The code below assumes that classes are set on the <figure> element...\n\t\tconversionApi.writer.addClass( modelElement.getAttribute( 'customClass' ), viewFigure );\n\n\t\t// ... but if you prefer the classes to be passed to the <img> element, find the view element inside the <figure>:\n\t\t//\n\t\t// const viewElement = findViewChild( viewFigure, viewElementName, conversionApi );\n\t\t//\n\t\t// conversionApi.writer.addClass( modelElement.getAttribute( 'customClass' ), viewElement );\n\t} );\n}\n\n/**\n * Helper method that searches for a given view element in all children of the model element.\n *\n * @param {module:engine/view/item~Item} viewElement\n * @param {String} viewElementName\n * @param {module:engine/conversion/downcastdispatcher~DowncastConversionApi} conversionApi\n * @return {module:engine/view/item~Item}\n */\nfunction findViewChild( viewElement, viewElementName, conversionApi ) {\n\tconst viewChildren = Array.from( conversionApi.writer.createRangeIn( viewElement ).getItems() );\n\n\treturn viewChildren.find( item => item.is( viewElementName ) );\n}\n\n/**\n * Returns the custom attribute upcast converter.\n */\nfunction upcastAttribute( viewElementName, viewAttribute, modelAttribute ) {\n\treturn dispatcher => dispatcher.on( `element:${ viewElementName }`, ( evt, data, conversionApi ) => {\n\t\tconst viewItem = data.viewItem;\n\t\tconst modelRange = data.modelRange;\n\n\t\tconst modelElement = modelRange && modelRange.start.nodeAfter;\n\n\t\tif ( !modelElement ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconversionApi.writer.setAttribute( modelAttribute, viewItem.getAttribute( viewAttribute ), modelElement );\n\t} );\n}\n\n/**\n * Returns the custom attribute downcast converter.\n */\nfunction downcastAttribute( modelElementName, viewElementName, viewAttribute, modelAttribute ) {\n\treturn dispatcher => dispatcher.on( `insert:${ modelElementName }`, ( evt, data, conversionApi ) => {\n\t\tconst modelElement = data.item;\n\n\t\tconst viewFigure = conversionApi.mapper.toViewElement( modelElement );\n\t\tconst viewElement = findViewChild( viewFigure, viewElementName, conversionApi );\n\n\t\tif ( !viewElement ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconversionApi.writer.setAttribute( viewAttribute, modelElement.getAttribute( modelAttribute ), viewElement );\n\t} );\n}\n\nClassicEditor\n\t.create( document.querySelector( '#snippet-custom-figure-attributes' ), {\n\t\tcloudServices: CS_CONFIG,\n\t\textraPlugins: [ CustomFigureAttributes ],\n\t\ttoolbar: {\n\t\t\tviewportTopOffset: window.getViewportTopOffsetConfig()\n\t\t}\n\t} )\n\t.then( editor => {\n\t\twindow.editor = editor;\n\t} )\n\t.catch( err => {\n\t\tconsole.error( err.stack );\n\t} );\n"],"sourceRoot":""}