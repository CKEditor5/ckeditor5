{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./packages/ckeditor5-cloud-services/tests/_utils/cloud-services-config.js","webpack:///./node_modules/umberto/source/ckeditor5/12.0.0/_snippets/builds/saving-data/manualsave.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","CS_CONFIG","tokenUrl","uploadUrl","HTTP_SERVER_LAG","isDirty","updateStatus","editor","buttonContainer","document","querySelector","classList","add","remove","plugins","hasAny","addEventListener","evt","target","ClassicEditor","cloudServices","toolbar","viewportTopOffset","window","getViewportTopOffsetConfig","then","on","model","handleStatusChanges","saveButton","pendingActions","data","getData","action","preventDefault","setTimeout","msg","console","consoleUpdates","textContent","updateServerDataConsole","handleSaveButton","handleBeforeunload","catch","err","error","stack"],"mappings":"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","file":"snippet.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n// WARNING: The URLs below should not be used for any other purpose than Easy Image plugin development.\n// Images uploaded using the testing token service may be deleted automatically at any moment.\n// If you would like to try the Easy Image service, please sign up for a free trial (https://ckeditor.com/ckeditor-cloud-services/).\n// Images uploaded during the free trial will not be deleted for the whole trial period and additionally the trial service can be converted\n// into a subscription at any moment, allowing you to preserve all uploaded images.\n\nexport const TOKEN_URL = 'https://33333.cke-cs.com/token/dev/ijrDsqFix838Gh3wGO3F77FSW94BwcLXprJ4APSp3XQ26xsUHTi0jcb1hoBt';\n\nexport const UPLOAD_URL = 'https://33333.cke-cs.com/easyimage/upload/';\n\nexport const CS_CONFIG = {\n\ttokenUrl: TOKEN_URL,\n\tuploadUrl: UPLOAD_URL\n};\n","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/* globals ClassicEditor, console, window, document, setTimeout */\n\nimport { CS_CONFIG } from '@ckeditor/ckeditor5-cloud-services/tests/_utils/cloud-services-config';\n\nlet HTTP_SERVER_LAG = 500;\nlet isDirty = false;\n\ndocument.querySelector( '#snippet-manualsave-lag' ).addEventListener( 'change', evt => {\n\tHTTP_SERVER_LAG = evt.target.value;\n} );\n\nClassicEditor\n\t.create( document.querySelector( '#snippet-manualsave' ), {\n\t\tcloudServices: CS_CONFIG,\n\t\ttoolbar: {\n\t\t\tviewportTopOffset: window.getViewportTopOffsetConfig()\n\t\t}\n\t} )\n\t.then( editor => {\n\t\twindow.editor = editor;\n\n\t\thandleStatusChanges( editor );\n\t\thandleSaveButton( editor );\n\t\thandleBeforeunload( editor );\n\t} )\n\t.catch( err => {\n\t\tconsole.error( err.stack );\n\t} );\n\n// Handle clicking the \"Save\" button.\nfunction handleSaveButton( editor ) {\n\tconst saveButton = document.querySelector( '#snippet-manualsave-save' );\n\tconst pendingActions = editor.plugins.get( 'PendingActions' );\n\n\tsaveButton.addEventListener( 'click', evt => {\n\t\tconst data = editor.getData();\n\t\tconst action = pendingActions.add( 'Saving in progress.' );\n\n\t\tevt.preventDefault();\n\n\t\t// Fake HTTP server's lag.\n\t\tsetTimeout( () => {\n\t\t\tupdateServerDataConsole( data );\n\n\t\t\tpendingActions.remove( action );\n\n\t\t\t// Reset isDirty only if data didn't change in the meantime.\n\t\t\tif ( data == editor.getData() ) {\n\t\t\t\tisDirty = false;\n\t\t\t}\n\n\t\t\tupdateStatus( editor );\n\t\t}, HTTP_SERVER_LAG );\n\t} );\n}\n\nfunction handleStatusChanges( editor ) {\n\tconst pendingActions = editor.plugins.get( 'PendingActions' );\n\n\tpendingActions.on( 'change:hasAny', () => updateStatus( editor ) );\n\n\teditor.model.document.on( 'change:data', () => {\n\t\tisDirty = true;\n\n\t\tupdateStatus( editor );\n\t} );\n}\n\nfunction handleBeforeunload( editor ) {\n\twindow.addEventListener( 'beforeunload', evt => {\n\t\tif ( editor.plugins.get( 'PendingActions' ).hasAny ) {\n\t\t\tevt.preventDefault();\n\t\t}\n\t} );\n}\n\nfunction updateStatus( editor ) {\n\tconst buttonContainer = document.querySelector( '#snippet-manualsave-container' );\n\n\tif ( isDirty ) {\n\t\tbuttonContainer.classList.add( 'active' );\n\t} else {\n\t\tbuttonContainer.classList.remove( 'active' );\n\t}\n\n\tif ( editor.plugins.get( 'PendingActions' ).hasAny ) {\n\t\tbuttonContainer.classList.add( 'saving' );\n\t} else {\n\t\tbuttonContainer.classList.remove( 'saving' );\n\t}\n}\n\nlet consoleUpdates = 0;\n\nfunction updateServerDataConsole( msg ) {\n\tconst console = document.querySelector( '#snippet-manualsave-console' );\n\n\tconsoleUpdates++;\n\tconsole.classList.add( 'updated' );\n\tconsole.textContent = msg;\n\n\tsetTimeout( () => {\n\t\tif ( --consoleUpdates == 0 ) {\n\t\t\tconsole.classList.remove( 'updated' );\n\t\t}\n\t}, 500 );\n}\n"],"sourceRoot":""}