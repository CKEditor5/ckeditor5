{"version":3,"file":"features/comments-adapter/snippet.js","mappings":";;;SAQA,MAAMA,EAEE,CACN,CACCC,GAAI,SACJC,KAAM,cAEP,CACCD,GAAI,SACJC,KAAM,cA8DT,MAAMC,EAAQC,SAASC,eAAgB,4BACvC,IAAIC,EAAiB,EAErB,SAASC,EAAaC,EAAYC,GACjC,MAAMC,EAAeN,SAASO,cAAe,OACvCC,EAASR,SAASO,cAAe,OAsBvC,OApBAL,IACAH,EAAMU,UAAUC,IAAK,WAErBJ,EAAaK,UAAY,mCACzBL,EAAaM,YAAcR,EAE3BI,EAAOG,UAAY,iCACnBH,EAAOI,YAAcC,KAAKC,UAAWT,GAErCN,EAAMgB,UAAY,GAElBhB,EAAMiB,YAAaV,GACnBP,EAAMiB,YAAaR,GAEnBS,YAAY,KACc,KAAlBf,GACNH,EAAMU,UAAUS,OAAQ,UACzB,GACE,KAEIC,QAAQC,SAChB,CAEA,MA2BMC,EAAW,IAAIC,eAAgBC,eACrCC,OAAOH,SAAWA,EAElBA,EAASI,OAAQzB,SAAS0B,cAAe,6BAA+B,CACvEC,YA9BA,uvCA+BAC,QAAS,CACR,aAAc,aAAc,UAAW,OAAQ,SAAU,OAAQ,OAAQ,QAAS,YAClF,QAAS,eAAgB,eAAgB,eAAgB,aAAc,WAtHzE,MACC,WAAAC,CAAaC,GACZC,KAAKD,OAASA,CACf,CAEA,IAAAE,GACC,MAAMC,EAAcF,KAAKD,OAAOF,QAAQM,IAAK,SACvCC,EAA2BJ,KAAKD,OAAOF,QAAQM,IAAK,sBAG1D,IAAM,MAAME,KAAQxC,EACnBqC,EAAYI,QAASD,GAItBH,EAAYK,SAAU,UAEtBH,EAAyBI,QAAU,CAClCC,WAAYnC,GAAQF,EAAa,eAAgBE,GACjDoC,cAAepC,GAAQF,EAAa,kBAAmBE,GACvDqC,cAAerC,GAAQF,EAAa,kBAAmBE,GAEvD,gBAAAsC,CAAkBtC,GACjB,MAAMuC,EAA2B,CAChCC,SAAUxC,EAAKwC,SACfC,QAAS,CACRC,KAAM,OACNC,MAAO,kCAERC,SAAU,CACT,CACCC,UAAW,YACXC,SAAU,SACVC,QAAS,6DACTC,UAAW,IAAIC,KACfC,WAAY,CAAC,IAGfC,eAAe,GAGhB,OAAOrD,EAAa,qBAAsBE,GAAOoD,MAAM,IAAMb,GAC9D,EACAc,iBAAkBrD,GAAQF,EAAa,qBAAsBE,GAC3DoD,MAAM,KAAM,CAAIZ,SAAUxC,EAAKwC,SAAUI,SAAU,OACrDU,oBAAqBtD,GAAQF,EAAa,wBAAyBE,GACnEuD,qBAAsBvD,GAAQF,EAAa,yBAA0BE,GACnEoD,MAAM,KAAM,CAAII,WAAY,IAAIP,KAAQQ,WAAY7B,EAAY8B,GAAGlE,OACrEmE,oBAAqB3D,GAAQF,EAAa,wBAAyBE,GACnE4D,oBAAqB5D,GAAQF,EAAa,wBAAyBE,GAErE,GAmEqG6D,eAErGC,QAAS,CACRC,MAAO,CACN,OAAQ,OACR,IAAK,UAAW,kBAChB,IAAK,UACL,IAAK,OAAQ,SACb,IAAK,OACL,IAAK,eAAgB,iBAGvBC,WAAY,kXACZC,QAAS,CACRC,UAAWvE,SAAS0B,cAAe,+BAEpC8C,GAAI,CACHC,eAAgB,CACfC,IAAKlD,OAAOmD,+BAGd1B,SAAU,CACT2B,aAAc,CACbC,aAActD,cAAcuD,eAAeC,QAAQC,GAC3C,CAAE,OAAQ,SAAU,YAAa,OAAQ,cAAeC,SAAUD,EAAOE,gBAInFC,QAAS,CACRC,MAAO,CACN,CACCC,OAAQ,IACRC,KAAM,CAAE,UAAW,QAAS,aAAc,YAAa,SAAU,Y","sources":["webpack://ckeditor5/./node_modules/umberto/source/ckeditor5/44.1.0/_snippets/features/comments-adapter.js"],"sourcesContent":["/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/* globals setTimeout, window, document, EditorWatchdog, ClassicEditor, LICENSE_KEY, MentionPlugin */\n\n// Application data will be available under a global variable `appData`.\nconst appData = {\n\t// Users data.\n\tusers: [\n\t\t{\n\t\t\tid: 'user-1',\n\t\t\tname: 'Mex Haddox'\n\t\t},\n\t\t{\n\t\t\tid: 'user-2',\n\t\t\tname: 'Zee Croce'\n\t\t}\n\t],\n\n\t// The ID of the current user.\n\tuserId: 'user-1'\n};\n\nclass CommentsAdapter {\n\tconstructor( editor ) {\n\t\tthis.editor = editor;\n\t}\n\n\tinit() {\n\t\tconst usersPlugin = this.editor.plugins.get( 'Users' );\n\t\tconst commentsRepositoryPlugin = this.editor.plugins.get( 'CommentsRepository' );\n\n\t\t// Load the users data.\n\t\tfor ( const user of appData.users ) {\n\t\t\tusersPlugin.addUser( user );\n\t\t}\n\n\t\t// Set the current user.\n\t\tusersPlugin.defineMe( 'user-1' );\n\n\t\tcommentsRepositoryPlugin.adapter = {\n\t\t\taddComment: data => showPending( 'addComment()', data ),\n\t\t\tupdateComment: data => showPending( 'updateComment()', data ),\n\t\t\tremoveComment: data => showPending( 'removeComment()', data ),\n\n\t\t\tgetCommentThread( data ) {\n\t\t\t\tconst initialCommentThreadData = {\n\t\t\t\t\tthreadId: data.threadId,\n\t\t\t\t\tcontext: {\n\t\t\t\t\t\ttype: 'text',\n\t\t\t\t\t\tvalue: 'Bilingual Personality Disorder'\n\t\t\t\t\t},\n\t\t\t\t\tcomments: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcommentId: 'comment-1',\n\t\t\t\t\t\t\tauthorId: 'user-2',\n\t\t\t\t\t\t\tcontent: '<p>Are we sure we want to use a made-up disorder name?</p>',\n\t\t\t\t\t\t\tcreatedAt: new Date(),\n\t\t\t\t\t\t\tattributes: {}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\tisFromAdapter: true\n\t\t\t\t};\n\n\t\t\t\treturn showPending( 'getCommentThread()', data ).then( () => initialCommentThreadData );\n\t\t\t},\n\t\t\taddCommentThread: data => showPending( 'addCommentThread()', data )\n\t\t\t\t.then( () => ( { threadId: data.threadId, comments: [] } ) ),\n\t\t\tupdateCommentThread: data => showPending( 'updateCommentThread()', data ),\n\t\t\tresolveCommentThread: data => showPending( 'resolveCommentThread()', data )\n\t\t\t\t.then( () => ( { resolvedAt: new Date(), resolvedBy: usersPlugin.me.id } ) ),\n\t\t\treopenCommentThread: data => showPending( 'reopenCommentThread()', data ),\n\t\t\tremoveCommentThread: data => showPending( 'removeCommentThread()', data )\n\t\t};\n\t}\n}\n\nconst barEl = document.getElementById( 'comments-adapter-console' );\nlet consoleUpdates = 0;\n\nfunction showPending( methodName, data ) {\n\tconst actionNameEl = document.createElement( 'div' );\n\tconst dataEl = document.createElement( 'div' );\n\n\tconsoleUpdates++;\n\tbarEl.classList.add( 'updated' );\n\n\tactionNameEl.className = 'comments-adapter-console__action';\n\tactionNameEl.textContent = methodName;\n\n\tdataEl.className = 'comments-adapter-console__data';\n\tdataEl.textContent = JSON.stringify( data );\n\n\tbarEl.innerHTML = '';\n\n\tbarEl.appendChild( actionNameEl );\n\tbarEl.appendChild( dataEl );\n\n\tsetTimeout( () => {\n\t\tif ( --consoleUpdates == 0 ) {\n\t\t\tbarEl.classList.remove( 'updated' );\n\t\t}\n\t}, 500 );\n\n\treturn Promise.resolve();\n}\n\nconst initialData =\n\t`<h2>\n\t\t<comment-start name=\"thread-1\"></comment-start>\n\t\tBilingual Personality Disorder\n\t\t<comment-end name=\"thread-1\"></comment-end>\n\t</h2>\n\t<p>\n\t\tThis may be the first time you hear about this made-up disorder but it actually isn’t so far from the truth.\n\t\tAs recent studies show, the language you speak has more effects on you than you realize.\n\t\tAccording to the studies, the language a person speaks affects their cognition,\n\t\tbehavior, emotions and hence <strong>their personality</strong>.\n\t</p>\n\t<figure class=\"image image-style-side\">\n\t\t<img src=\"../../../assets/img/collaboration-demo-img.jpg\"\n\t\t\tsrcset=\"../../../assets/img/collaboration-demo-img.jpg, ../../../assets/img/collaboration-demo-img_2x.jpg 2x\">\n\t\t<figcaption>\n\t\t\tOne language, one person.\n\t\t</figcaption>\n\t</figure>\n\t<p>\n\t\tThis shouldn’t come as a surprise\n\t\t<a href=\"https://en.wikipedia.org/wiki/Lateralization_of_brain_function\">since we already know</a>\n\t\tthat different regions of the brain become more active depending on the activity.\n\t\tThe structure, information and especially <strong>the culture</strong> of languages varies substantially\n\t\tand the language a person speaks is an essential element of daily life.\n\t</p>`;\n\nconst watchdog = new EditorWatchdog( ClassicEditor );\nwindow.watchdog = watchdog;\n\nwatchdog.create( document.querySelector( '.comments-adapter .editor' ), {\n\tinitialData,\n\tplugins: [\n\t\t'Essentials', 'Autoformat', 'Heading', 'Bold', 'Italic', 'Link', 'List', 'Image', 'EasyImage',\n\t\t'Table', 'TableToolbar', 'ImageToolbar', 'ImageCaption', 'ImageStyle', 'Comments', CommentsAdapter, MentionPlugin\n\t],\n\ttoolbar: {\n\t\titems: [\n\t\t\t'undo', 'redo',\n\t\t\t'|', 'comment', 'commentsArchive',\n\t\t\t'|', 'heading',\n\t\t\t'|', 'bold', 'italic',\n\t\t\t'|', 'link',\n\t\t\t'|', 'bulletedList', 'numberedList'\n\t\t]\n\t},\n\tlicenseKey: LICENSE_KEY,\n\tsidebar: {\n\t\tcontainer: document.querySelector( '.comments-adapter .sidebar' )\n\t},\n\tui: {\n\t\tviewportOffset: {\n\t\t\ttop: window.getViewportTopOffsetConfig()\n\t\t}\n\t},\n\tcomments: {\n\t\teditorConfig: {\n\t\t\textraPlugins: ClassicEditor.builtinPlugins.filter( plugin => {\n\t\t\t\treturn [ 'Bold', 'Italic', 'Underline', 'List', 'Autoformat' ].includes( plugin.pluginName );\n\t\t\t} )\n\t\t}\n\t},\n\tmention: {\n\t\tfeeds: [\n\t\t\t{\n\t\t\t\tmarker: '@',\n\t\t\t\tfeed: [ '@Barney', '@Lily', '@Marry Ann', '@Marshall', '@Robin', '@Ted' ]\n\t\t\t}\n\t\t]\n\t}\n} );\n"],"names":["appData","id","name","barEl","document","getElementById","consoleUpdates","showPending","methodName","data","actionNameEl","createElement","dataEl","classList","add","className","textContent","JSON","stringify","innerHTML","appendChild","setTimeout","remove","Promise","resolve","watchdog","EditorWatchdog","ClassicEditor","window","create","querySelector","initialData","plugins","constructor","editor","this","init","usersPlugin","get","commentsRepositoryPlugin","user","addUser","defineMe","adapter","addComment","updateComment","removeComment","getCommentThread","initialCommentThreadData","threadId","context","type","value","comments","commentId","authorId","content","createdAt","Date","attributes","isFromAdapter","then","addCommentThread","updateCommentThread","resolveCommentThread","resolvedAt","resolvedBy","me","reopenCommentThread","removeCommentThread","MentionPlugin","toolbar","items","licenseKey","sidebar","container","ui","viewportOffset","top","getViewportTopOffsetConfig","editorConfig","extraPlugins","builtinPlugins","filter","plugin","includes","pluginName","mention","feeds","marker","feed"],"sourceRoot":""}