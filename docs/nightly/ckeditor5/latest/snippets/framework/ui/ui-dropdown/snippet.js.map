{"version":3,"file":"framework/ui/ui-dropdown/snippet.js","mappings":";;;SAQA,MAAMA,EAAS,IAAIC,OAEbC,EAAa,IAAIC,WACvBD,EAAWE,IAAK,CACfC,KAAM,SACNC,MAAO,IAAIC,MAAO,CACjBC,MAAO,SACPC,UAAU,MAGZP,EAAWE,IAAK,CACfC,KAAM,eACNC,MAAO,IAAIC,MAAO,CACjBC,MAAO,gBACPC,UAAU,MAIZ,MAAMC,EAAeC,eAAgBX,GACrCU,EAAaE,WAAWC,IAAK,CAC5BL,MAAO,gBACPC,UAAU,IAEXK,kBAAmBJ,EAAcR,GACjCQ,EAAaK,SAEb,MAAMC,EAAO,IAAIC,WACXC,EAAS,IAAID,WAEnBD,EAAKH,IAAK,CAAEL,MAAO,OAAQC,UAAU,EAAOU,KAAMC,WAClDF,EAAOL,IAAK,CAAEL,MAAO,SAAUC,UAAU,EAAOU,KAAME,aAEtD,MAAMC,EAAU,CAAEN,EAAME,GAElBK,EAAkBZ,eAAgBX,GACxCuB,EAAgBX,WAAWC,IAAK,CAC/BL,MAAO,mBACPC,UAAU,IAEXe,qBAAsBD,EAAiBD,GACvCC,EAAgBR,SAEhB,MAAMU,EAAsBd,eAAgBX,EAAQ0B,iBACpDF,qBAAsBC,EAAqB,IAAKH,IAChDG,EAAoBb,WAAWC,IAAK,CACnCL,MAAO,wBACPC,UAAU,IAEXgB,EAAoBV,SAEpB,MAAMY,EAAY,CAAEjB,EAAca,EAAiBE,GAE7CG,EAAU,IAAIC,YAAa7B,GACjC2B,EAAUG,SAASC,GAAYH,EAAQI,MAAM5B,IAAK2B,KAClDH,EAAQb,SAERkB,SAASC,cAAe,gBAAiBC,OAAQP,EAAQQ,Q","sources":["webpack://ckeditor5/./node_modules/umberto/source/ckeditor5/44.1.0/_snippets/framework/ui/ui-dropdown.js"],"sourcesContent":["/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/* globals Locale, Collection, Model, createDropdown, addListToDropdown, ButtonView,\nboldIcon, italicIcon, SplitButtonView, addToolbarToDropdown, ToolbarView, document */\n\nconst locale = new Locale();\n\nconst collection = new Collection();\ncollection.add( {\n\ttype: 'button',\n\tmodel: new Model( {\n\t\tlabel: 'Button',\n\t\twithText: true\n\t} )\n} );\ncollection.add( {\n\ttype: 'switchbutton',\n\tmodel: new Model( {\n\t\tlabel: 'Switch button',\n\t\twithText: true\n\t} )\n} );\n\nconst listDropdown = createDropdown( locale );\nlistDropdown.buttonView.set( {\n\tlabel: 'List dropdown',\n\twithText: true\n} );\naddListToDropdown( listDropdown, collection );\nlistDropdown.render();\n\nconst bold = new ButtonView();\nconst italic = new ButtonView();\n\nbold.set( { label: 'Bold', withText: false, icon: boldIcon } );\nitalic.set( { label: 'Italic', withText: false, icon: italicIcon } );\n\nconst buttons = [ bold, italic ];\n\nconst toolbarDropdown = createDropdown( locale );\ntoolbarDropdown.buttonView.set( {\n\tlabel: 'Toolbar dropdown',\n\twithText: true\n} );\naddToolbarToDropdown( toolbarDropdown, buttons );\ntoolbarDropdown.render();\n\nconst splitButtonDropdown = createDropdown( locale, SplitButtonView );\naddToolbarToDropdown( splitButtonDropdown, [ ...buttons ] );\nsplitButtonDropdown.buttonView.set( {\n\tlabel: 'Split button dropdown',\n\twithText: true\n} );\nsplitButtonDropdown.render();\n\nconst dropdowns = [ listDropdown, toolbarDropdown, splitButtonDropdown ];\n\nconst toolbar = new ToolbarView( locale );\ndropdowns.forEach( dropdown => toolbar.items.add( dropdown ) );\ntoolbar.render();\n\ndocument.querySelector( '.ui-dropdown' ).append( toolbar.element );\n"],"names":["locale","Locale","collection","Collection","add","type","model","Model","label","withText","listDropdown","createDropdown","buttonView","set","addListToDropdown","render","bold","ButtonView","italic","icon","boldIcon","italicIcon","buttons","toolbarDropdown","addToolbarToDropdown","splitButtonDropdown","SplitButtonView","dropdowns","toolbar","ToolbarView","forEach","dropdown","items","document","querySelector","append","element"],"sourceRoot":""}