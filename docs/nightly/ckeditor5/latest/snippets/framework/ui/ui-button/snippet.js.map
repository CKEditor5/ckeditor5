{"version":3,"file":"framework/ui/ui-button/snippet.js","mappings":";;;SAOA,MAAMA,EAAS,IAAIC,OAEbC,EAAe,IAAIC,WACzBD,EAAaE,IAAK,CACjBC,MAAO,gBACPC,UAAU,EACVC,MAAO,qBAERL,EAAaM,SAEb,MAAMC,EAAgB,IAAIN,WAC1BM,EAAcL,IAAK,CAClBC,MAAO,iBACPC,UAAU,EACVC,MAAO,uBAERE,EAAcD,SAEd,MAAME,EAAa,IAAIP,WACvBO,EAAWN,IAAK,CACfC,MAAO,cACPC,UAAU,EACVC,MAAO,mBAERG,EAAWF,SAEX,MAAMG,EAAa,IAAIR,WACvBQ,EAAWP,IAAK,CACfC,MAAO,OACPC,UAAU,EACVM,KAAMC,UACNN,MAAO,mBAERI,EAAWH,SAEX,MAAMM,EAAkB,IAAIX,WAC5BW,EAAgBV,IAAK,CACpBC,MAAO,SACPC,UAAU,EACVS,eAAe,EACfC,UAAW,WAEZF,EAAgBN,SAEhB,MAAMS,EAAgB,IAAId,WAC1Bc,EAAcb,IAAK,CAClBC,MAAO,iBACPC,UAAU,EACVY,QAAS,6BACTC,gBAAiB,MAElBF,EAAcT,SAEd,MAAMY,EAAU,CAAElB,EAAcO,EAAeC,EAAYC,EAAYG,EAAiBG,GAElFI,EAAiB,IAAIC,YAAatB,GACxCoB,EAAQG,SAASC,GAAUH,EAAeI,MAAMC,IAAKF,KACrDH,EAAeb,SAEfmB,SAASC,cAAe,cAAeC,OAAQR,EAAeS,SAE9DC,cACEC,OAAQL,SAASC,cAAe,qBAAuB,CACvDK,QAAS,CAAEC,YACXC,WAAY,QAEZC,MAAMC,IACgB,IAAIC,eAAgBD,EAAQ,IAElDE,OAAOC,IACPC,QAAQD,MAAOA,EAAME,MAAO,G","sources":["webpack://ckeditor5/./node_modules/umberto/source/ckeditor5/44.1.0/_snippets/framework/ui/ui-button.js"],"sourcesContent":["/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/* globals document, console, Locale, ButtonView, checkIcon, ToolbarView, ClassicEditor, TooltipManager, Essentials */\n\nconst locale = new Locale();\n\nconst actionButton = new ButtonView();\nactionButton.set( {\n\tlabel: 'Action button',\n\twithText: true,\n\tclass: 'ck-button-action'\n} );\nactionButton.render();\n\nconst roundedButton = new ButtonView();\nroundedButton.set( {\n\tlabel: 'Rounded button',\n\twithText: true,\n\tclass: 'ck-rounded-corners'\n} );\nroundedButton.render();\n\nconst boldButton = new ButtonView();\nboldButton.set( {\n\tlabel: 'Bold button',\n\twithText: true,\n\tclass: 'ck-button-bold'\n} );\nboldButton.render();\n\nconst saveButton = new ButtonView();\nsaveButton.set( {\n\tlabel: 'Save',\n\twithText: false,\n\ticon: checkIcon,\n\tclass: 'ck-button-save'\n} );\nsaveButton.render();\n\nconst keystrokeButton = new ButtonView();\nkeystrokeButton.set( {\n\tlabel: 'Italic',\n\twithText: true,\n\twithKeystroke: true,\n\tkeystroke: 'Ctrl+I'\n} );\nkeystrokeButton.render();\n\nconst tooltipButton = new ButtonView();\ntooltipButton.set( {\n\tlabel: 'Tooltip button',\n\twithText: true,\n\ttooltip: 'The content of the tooltip',\n\ttooltipPosition: 's'\n} );\ntooltipButton.render();\n\nconst buttons = [ actionButton, roundedButton, boldButton, saveButton, keystrokeButton, tooltipButton ];\n\nconst toolbarButtons = new ToolbarView( locale );\nbuttons.forEach( button => toolbarButtons.items.add( button ) );\ntoolbarButtons.render();\n\ndocument.querySelector( '.ui-button' ).append( toolbarButtons.element );\n\nClassicEditor\n\t.create( document.querySelector( '#ui-button-editor' ), {\n\t\tplugins: [ Essentials ],\n\t\tlicenseKey: 'GPL'\n\t} )\n\t.then( editor => {\n\t\tthis.tooltipManager = new TooltipManager( editor );\n\t} )\n\t.catch( error => {\n\t\tconsole.error( error.stack );\n\t} );\n"],"names":["locale","Locale","actionButton","ButtonView","set","label","withText","class","render","roundedButton","boldButton","saveButton","icon","checkIcon","keystrokeButton","withKeystroke","keystroke","tooltipButton","tooltip","tooltipPosition","buttons","toolbarButtons","ToolbarView","forEach","button","items","add","document","querySelector","append","element","ClassicEditor","create","plugins","Essentials","licenseKey","then","editor","TooltipManager","catch","error","console","stack"],"sourceRoot":""}