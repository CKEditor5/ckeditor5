{"version":3,"file":"installation/getting-and-setting-data/manualsave/snippet.js","mappings":";;;sBAWO,MAIMA,EAAY,CACxBC,SALwB,kGAMxBC,UAJyB,8CCJ1B,IAAIC,EAAkB,IAClBC,GAAU,EA0Ed,SAASC,EAAcC,GACtB,MAAMC,EAAkBC,SAASC,cAAe,iCAE3CL,EACJG,EAAgBG,UAAUC,IAAK,UAE/BJ,EAAgBG,UAAUE,OAAQ,UAG9BN,EAAOO,QAAQC,IAAK,kBAAmBC,OAC3CR,EAAgBG,UAAUC,IAAK,UAE/BJ,EAAgBG,UAAUE,OAAQ,SAEpC,CAtFAJ,SAASC,cAAe,2BAA4BO,iBAAkB,UAAUC,IAC/Ed,EAAkBc,EAAIC,OAAOC,KAAK,IAGnCC,cACEC,OAAQb,SAASC,cAAe,uBAAyB,CACzDa,cAAetB,EACfuB,GAAI,CACHC,eAAgB,CACfC,IAAKC,OAAOC,+BAGdC,WAAY,QAEZC,MAAMvB,IACNoB,OAAOpB,OAASA,EAqClB,SAA8BA,GAC7B,MAAMwB,EAAiBxB,EAAOO,QAAQC,IAAK,kBAE3CgB,EAAeC,GAAI,iBAAiB,IAAM1B,EAAcC,KAExDA,EAAO0B,MAAMxB,SAASuB,GAAI,eAAe,KACxC3B,GAAU,EAEVC,EAAcC,EAAQ,GAExB,CA7CE2B,CAAqB3B,GASvB,SAA2BA,GAC1B,MAAM4B,EAAa1B,SAASC,cAAe,4BACrCqB,EAAiBxB,EAAOO,QAAQC,IAAK,kBAE3CoB,EAAWlB,iBAAkB,SAASC,IACrC,MAAMkB,EAAO7B,EAAO8B,UACdC,EAASP,EAAenB,IAAK,uBAEnCM,EAAIqB,iBAGJC,YAAY,MAqDd,SAAkCC,GACjC,MAAMC,EAAUjC,SAASC,cAAe,+BAExCiC,IACAD,EAAQ/B,UAAUC,IAAK,WACvB8B,EAAQE,YAAcH,EAEtBD,YAAY,KACc,KAAlBG,GACND,EAAQ/B,UAAUE,OAAQ,UAC3B,GACE,IACJ,CAhEGgC,CAAyBT,GAEzBL,EAAelB,OAAQyB,GAGlBF,GAAQ7B,EAAO8B,YACnBhC,GAAU,GAGXC,EAAcC,EAAQ,GACpBH,EAAiB,GAEtB,CAhCE0C,CAAkBvC,GA8CpB,SAA6BA,GAC5BoB,OAAOV,iBAAkB,gBAAgBC,IACnCX,EAAOO,QAAQC,IAAK,kBAAmBC,QAC3CE,EAAIqB,gBACL,GAEF,CAnDEQ,CAAoBxC,EAAQ,IAE5ByC,OAAOC,IACPP,QAAQQ,MAAOD,EAAIE,MAAO,IAkE5B,IAAIR,EAAiB,C","sources":["webpack://ckeditor5/./packages/ckeditor5-cloud-services/tests/_utils/cloud-services-config.js","webpack://ckeditor5/./node_modules/umberto/source/ckeditor5/44.1.0/_snippets/installation/getting-and-setting-data/manualsave.js"],"sourcesContent":["/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n// WARNING: The URLs below should not be used for any other purpose than Easy Image plugin development.\n// Images uploaded using the testing token service may be deleted automatically at any moment.\n// If you would like to try the Easy Image service, please sign up for a free trial (https://ckeditor.com/ckeditor-cloud-services/).\n// Images uploaded during the free trial will not be deleted for the whole trial period and additionally the trial service can be converted\n// into a subscription at any moment, allowing you to preserve all uploaded images.\n\nexport const TOKEN_URL = 'https://33333.cke-cs.com/token/dev/ijrDsqFix838Gh3wGO3F77FSW94BwcLXprJ4APSp3XQ26xsUHTi0jcb1hoBt';\n\nexport const UPLOAD_URL = 'https://33333.cke-cs.com/easyimage/upload/';\n\nexport const CS_CONFIG = {\n\ttokenUrl: TOKEN_URL,\n\tuploadUrl: UPLOAD_URL\n};\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/* globals ClassicEditor, console, window, document, setTimeout */\n\nimport { CS_CONFIG } from '@ckeditor/ckeditor5-cloud-services/tests/_utils/cloud-services-config.js';\n\nlet HTTP_SERVER_LAG = 500;\nlet isDirty = false;\n\ndocument.querySelector( '#snippet-manualsave-lag' ).addEventListener( 'change', evt => {\n\tHTTP_SERVER_LAG = evt.target.value;\n} );\n\nClassicEditor\n\t.create( document.querySelector( '#snippet-manualsave' ), {\n\t\tcloudServices: CS_CONFIG,\n\t\tui: {\n\t\t\tviewportOffset: {\n\t\t\t\ttop: window.getViewportTopOffsetConfig()\n\t\t\t}\n\t\t},\n\t\tlicenseKey: 'GPL'\n\t} )\n\t.then( editor => {\n\t\twindow.editor = editor;\n\n\t\thandleStatusChanges( editor );\n\t\thandleSaveButton( editor );\n\t\thandleBeforeunload( editor );\n\t} )\n\t.catch( err => {\n\t\tconsole.error( err.stack );\n\t} );\n\n// Handle clicking the \"Save\" button.\nfunction handleSaveButton( editor ) {\n\tconst saveButton = document.querySelector( '#snippet-manualsave-save' );\n\tconst pendingActions = editor.plugins.get( 'PendingActions' );\n\n\tsaveButton.addEventListener( 'click', evt => {\n\t\tconst data = editor.getData();\n\t\tconst action = pendingActions.add( 'Saving in progress.' );\n\n\t\tevt.preventDefault();\n\n\t\t// Fake HTTP server's lag.\n\t\tsetTimeout( () => {\n\t\t\tupdateServerDataConsole( data );\n\n\t\t\tpendingActions.remove( action );\n\n\t\t\t// Reset isDirty only if data didn't change in the meantime.\n\t\t\tif ( data == editor.getData() ) {\n\t\t\t\tisDirty = false;\n\t\t\t}\n\n\t\t\tupdateStatus( editor );\n\t\t}, HTTP_SERVER_LAG );\n\t} );\n}\n\nfunction handleStatusChanges( editor ) {\n\tconst pendingActions = editor.plugins.get( 'PendingActions' );\n\n\tpendingActions.on( 'change:hasAny', () => updateStatus( editor ) );\n\n\teditor.model.document.on( 'change:data', () => {\n\t\tisDirty = true;\n\n\t\tupdateStatus( editor );\n\t} );\n}\n\nfunction handleBeforeunload( editor ) {\n\twindow.addEventListener( 'beforeunload', evt => {\n\t\tif ( editor.plugins.get( 'PendingActions' ).hasAny ) {\n\t\t\tevt.preventDefault();\n\t\t}\n\t} );\n}\n\nfunction updateStatus( editor ) {\n\tconst buttonContainer = document.querySelector( '#snippet-manualsave-container' );\n\n\tif ( isDirty ) {\n\t\tbuttonContainer.classList.add( 'active' );\n\t} else {\n\t\tbuttonContainer.classList.remove( 'active' );\n\t}\n\n\tif ( editor.plugins.get( 'PendingActions' ).hasAny ) {\n\t\tbuttonContainer.classList.add( 'saving' );\n\t} else {\n\t\tbuttonContainer.classList.remove( 'saving' );\n\t}\n}\n\nlet consoleUpdates = 0;\n\nfunction updateServerDataConsole( msg ) {\n\tconst console = document.querySelector( '#snippet-manualsave-console' );\n\n\tconsoleUpdates++;\n\tconsole.classList.add( 'updated' );\n\tconsole.textContent = msg;\n\n\tsetTimeout( () => {\n\t\tif ( --consoleUpdates == 0 ) {\n\t\t\tconsole.classList.remove( 'updated' );\n\t\t}\n\t}, 500 );\n}\n"],"names":["CS_CONFIG","tokenUrl","uploadUrl","HTTP_SERVER_LAG","isDirty","updateStatus","editor","buttonContainer","document","querySelector","classList","add","remove","plugins","get","hasAny","addEventListener","evt","target","value","ClassicEditor","create","cloudServices","ui","viewportOffset","top","window","getViewportTopOffsetConfig","licenseKey","then","pendingActions","on","model","handleStatusChanges","saveButton","data","getData","action","preventDefault","setTimeout","msg","console","consoleUpdates","textContent","updateServerDataConsole","handleSaveButton","handleBeforeunload","catch","err","error","stack"],"sourceRoot":""}